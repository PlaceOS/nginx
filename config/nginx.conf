pid /var/run/nginx.pid;
daemon off;
worker_processes  1;
error_log stderr notice;
events {
  worker_connections  1024;
}

env JWT_PUBLIC;
env INFLUX_API_KEY;

http {
  include /usr/local/openresty/nginx/conf/mime.types;
  default_type application/octet-stream;
  log_format request_upstream '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '$request_time $upstream_response_time';
  access_log /dev/stdout request_upstream;
  sendfile    on;
  tcp_nopush  on;
  gzip        on;

  server {
    listen 80 default_server;
    server_name _;
    return 301 https://$http_host$request_uri;
  }

  server {
    listen 443 default_server ssl;

    ssl_certificate     /etc/nginx/ssl/default-domain/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/default-domain/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    resolver 127.0.0.11 valid=10s;
    set $api      api:3000;
    set $auth     auth:8080;
    set $dispatch dispatch:8086;
    set $staff    staff:8080;
    set $influx   influx:9999;
    set $kibana   kibana:5601;
    
    location ~ /\. {
      deny all;
    }

    location / {
        root /etc/nginx/html;
        try_files $uri $uri/index.html =404;
    }

    location /api/ {
        proxy_pass  http://$api;
        proxy_redirect   off;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 5m;
        proxy_send_timeout 5m;
        proxy_read_timeout 5m;

        location /api/server/ {
          proxy_pass  http://$dispatch;
        }

        location /api/files/ {
          proxy_pass  http://$auth;
        }

        location /api/staff/ {
          proxy_pass  http://$staff;
        }
    }

    location /auth/ {
      proxy_pass  http://$auth;
      proxy_redirect   off;
      proxy_http_version 1.1;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_connect_timeout 1m;
      proxy_send_timeout 2m;
      proxy_read_timeout 2m;
    }

    location /influxdb/ {
      access_by_lua_file  /bearer.lua;
      proxy_pass  http://$influx/;

      set_by_lua $influxdb_token 'return "Token " .. os.getenv("INFLUX_API_KEY")';
      proxy_set_header Authorization $influxdb_token;
      proxy_redirect   off;
      proxy_http_version 1.1;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_connect_timeout 1m;
      proxy_send_timeout 2m;
      proxy_read_timeout 2m;
    }

    location /monitor/ {
      auth_basic "Login";
      auth_basic_user_file /etc/nginx/.htpasswd-kibana;
      proxy_pass  http://$kibana;
      proxy_redirect   off;
      proxy_http_version 1.1;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_connect_timeout 1m;
      proxy_send_timeout 2m;
      proxy_read_timeout 2m;
    }
  }
}
